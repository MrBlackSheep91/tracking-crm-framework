generator client {
  provider      = "prisma-client-js"
  output        = "../node_modules/.prisma/client"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
}

// ============================================
// ENUMS GLOBALES
// ============================================

enum LeadStatus {
  NEW
  CONTACTED
  QUALIFIED
  PROPOSAL
  NEGOTIATION
  CLOSED_WON
  CLOSED_LOST
  ON_HOLD
  NURTURING
  CONVERTED
  UNQUALIFIED
  INACTIVE
  CHURNED

}

enum LeadStage {
  AWARENESS
  INTEREST
  CONSIDERATION
  INTENT
  EVALUATION
  PURCHASE
  RETENTION
  ADVOCACY
  PROSPECT
  OPPORTUNITY
  HOT_LEAD
  CUSTOMER
  LOST

}

enum ChannelType {
  EMAIL
  WHATSAPP
  SMS
  CALL
  MEETING
  SOCIAL
  CHAT
  PUSH
  WEB
  CUSTOM

}

// ============================================
// MODELOS CORE (BUSINESS, USER)
// ============================================

model Business {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name      String
  subdomain String?  @unique
  isActive  Boolean  @default(true)
  settings  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  users           BusinessUser[]
  contacts        Contact[]
  visitors        Visitor[]
  interactions    Interaction[]
  leads           Lead[]
  channelStatuses ChannelStatus[]
  activities      Activity[]
  customFields    CustomField[]
  Session         Session[]
  LeadScore       LeadScore[]
  TrackingEvent   TrackingEvent[]

  @@map("businesses")
}

model User {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email     String    @unique
  password  String
  firstName String?
  lastName  String?
  isActive  Boolean   @default(true)
  lastLogin DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  // Relaciones
  businesses BusinessUser[]
  activities Activity[]     @relation("ActivityCreator")

  @@map("users")
}

model BusinessUser {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.Uuid
  role       String   @default("member")

  @@unique([businessId, userId])
  @@map("business_users")
}

// ============================================
// MODELOS DE TRACKING
// ============================================

model Visitor {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid

  // Identificadores únicos
  visitorId   String  @unique
  fingerprint String?
  sessionId   String?

  // Información del dispositivo
  userAgent         String?
  deviceType        String?
  browser           String?
  browserVersion    String?
  operatingSystem   String?
  osVersion         String?
  screenResolution  String?
  screenSize        String?
  timezone          String?
  language          String?

  // Información de red y ubicación
  clientIP  String?
  ipAddress String?
  country   String?
  region    String?
  city      String?
  latitude  Float?
  longitude Float?

  // Métricas de comportamiento
  firstVisitAt        DateTime  @default(now())
  lastVisitAt         DateTime  @updatedAt
  lastActivityAt      DateTime? // Corregido: lastActivity -> lastActivityAt
  sessionsCount       Int       @default(1)
  totalTimeOnSite     Int       @default(0)
  pagesVisited        Json?     // Almacena un array de strings
  pageViews           Int       @default(0)
  scrollDepthMax      Int?      @default(0) // Añadido
  maxScrollPercentage Int?      @default(0)

  // Datos de origen y UTM
  firstSource   String?
  firstMedium   String?
  firstCampaign String?
  firstReferrer String?
  referrer      String? // Añadido
  utmParams     Json?

  // Engagement y calidad
  hasHighEngagement Boolean @default(false)
  engagementScore   Int?    @default(0)

  // Relaciones
  contactId String?  @db.Uuid
  contact   Contact? @relation(fields: [contactId], references: [id])
  sessions  Session[]
  events    TrackingEvent[]
  leads     Lead[]    @relation("VisitorToLead")

  // Auditoría
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([businessId])
  @@index([fingerprint])
  @@index([sessionId])
  @@index([clientIP])
  @@index([createdAt])
  @@index([lastActivityAt])
  @@map("visitors")
}

model Session {
  id         String   @id @db.Uuid
  visitor    Visitor  @relation(fields: [visitorId], references: [id])
  visitorId  String   @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid

  startedAt DateTime  @default(now())
  endedAt   DateTime?
  duration  Int?      @default(0)
  totalActiveTime Int? @default(0)

  // Dispositivo y navegador
  userAgent        String?
  deviceType       String?
  browser          String?
  browserVersion   String?
  operatingSystem  String?
  osVersion        String?
  screenResolution String?
  screenSize       String?
  timezone         String?
  language         String?

  // Localización
  ipAddress String?
  country   String?
  region    String?
  city      String?
  latitude  Float?
  longitude Float?

  // Actividad
  entryUrl          String?
  exitUrl           String?
  pagesViewed       Json?     // Almacena un array de strings
  pagesVisited      Json?     // Almacena un array de strings
  lastPageViewedUrl String?
  lastActivityAt    DateTime?
  scrollDepthMax    Int?      @default(0)
  referrer          String?

  // Atribución
  utmSource   String?
  utmMedium   String?
  utmCampaign String?
  utmContent  String?
  utmTerm     String?
  fbclid      String?
  gclid       String?

  // Análisis IA
  aiAnalysis Json?

  // Auditoría
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  leads         Lead[]          @relation("SessionToLead")
  TrackingEvent TrackingEvent[]

  @@index([visitorId])
  @@index([startedAt])
  @@index([businessId, startedAt])
  @@map("visitor_sessions")
}

model TrackingEvent {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid
  visitor    Visitor  @relation(fields: [visitorId], references: [id])
  visitorId  String   @db.Uuid
  session    Session  @relation(fields: [sessionId], references: [id])
  sessionId  String   @db.Uuid

  // Información del evento
  eventType     String
  eventCategory String?
  eventAction   String?
  eventName     String? // Añadido

  // Contexto del evento
  pageUrl   String
  pageTitle String?
  referrer  String?
  timestamp DateTime @default(now())

  // Datos específicos del evento DOM
  targetElement String?
  targetId      String? // Añadido
  targetClass   String? // Añadido
  targetText    String?
  targetType    String?
  targetClasses Json? // Almacena un array de strings
  eventValue    Float?

  // Metadata específica del evento
  metadata    Json?
  elementInfo Json?
  eventData   Json?
  eventDetail Json?

  // Datos de conversión
  conversionType      String?
  conversionValue     Float?
  conversionSuccess   Boolean?
  conversionAttemptId String?

  // Datos de formularios
  formId                  String?
  formFields              Json?
  formErrors              Json?
  formEmptyFields         Int?
  formEmptyRequiredFields Json?
  formIsValid             Boolean?
  formWillSubmit          Boolean?

  // Información técnica
  userAgent    String?
  ipAddress    String?
  pageLoadTime Int?

  // Métricas de tiempo
  clientGeneratedAt DateTime?
  timeToGenerate    Int?
  timeToSend        Int?

  // Auditoría
  createdAt DateTime @default(now())

  @@index([businessId])
  @@index([visitorId])
  @@index([sessionId])
  @@index([eventType])
  @@index([eventCategory])
  @@index([eventAction])
  @@index([pageUrl])
  @@index([timestamp])
  @@index([createdAt])
  @@index([conversionType])
  @@index([conversionSuccess])
  @@index([formWillSubmit])
  @@index([conversionAttemptId])
  @@map("tracking_events")
}

// ============================================
// MODELOS DE CRM
// ============================================

model Contact {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid

  // Información personal
  salutation String?
  firstName  String?
  middleName String?
  lastName   String?
  email      String?
  emailOptIn Boolean @default(false)
  phone      String?
  mobile     String?
  fax        String?

  // Información profesional
  company    String?
  jobTitle   String?
  department String?

  // Dirección
  addressType String?
  street      String?
  street2     String?
  city        String?
  state       String?
  postalCode  String?
  country     String?

  // Información adicional
  dateOfBirth DateTime?
  gender      String?
  website     String?

  // Clasificación y segmentación
  type         String?
  status       String?
  source       String?
  sourceDetail String?
  tags         String[]

  // Puntuación y análisis
  leadScore    Int       @default(0)
  lastActivity DateTime?

  // Preferencias
  locale   String?
  timezone String?

  // Datos personalizados
  customFields Json?

  // Auditoría
  createdBy String?
  updatedBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  interactions       Interaction[]
  visitors           Visitor[]
  channelStatuses    ChannelStatus[]
  activities         Activity[]      @relation("ContactActivities")
  customFieldEntries CustomField[]   @relation("ContactCustomFields")

  @@unique([businessId, email])
  @@index([businessId])
  @@index([email])
  @@index([phone])
  @@index([status])
  @@index([type])
  @@index([createdAt])
  @@index([leadScore])
  @@index([lastActivity])
  @@map("contacts")
}

model Lead {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid

  // Referencias importantes
  visitorId String   @db.Uuid
  visitor   Visitor  @relation("VisitorToLead", fields: [visitorId], references: [id])
  sessionId String? @db.Uuid
  session   Session? @relation("SessionToLead", fields: [sessionId], references: [id])

  // Identificadores
  formId   String?
  formType String?

  // Información de contacto
  email     String?
  name      String?
  firstName String?
  lastName  String?
  phone     String?
  company   String?
  jobTitle  String?

  // Status y Stage
  status   LeadStatus @default(NEW)
  stage    LeadStage  @default(PROSPECT)
  score    Int        @default(0)
  isHot    Boolean    @default(false)
  leadType String?

  // Tracking y atribución
  campaignId   String?
  campaignName String?
  processType  String?
  source       String?
  medium       String?
  content      String?
  term         String?
  fbclid       String?
  entryDate    DateTime @default(now())
  currentStep  Int      @default(0)

  // Conversión
  convertedAt    DateTime?
  convertedTo    String?
  convertedId    String?
  conversionPage String?

  // Tracking de interacción
  interactionType        String?
  interactionSource      String?
  interactionDescription String?
  timeOnPage             Float?
  scrollPercentage       Int?

  // Multi-channel status
  emailFunnelStatus String?
  emailSequenceStep Int?
  emailLastOpen     DateTime?
  emailLastClick    DateTime?

  whatsappStatus       String?
  whatsappSequenceStep Int?
  whatsappLastReply    DateTime?

  // Relación con estado detallado
  channelStatuses ChannelStatus[]

  // Datos personalizados
  customFields Json?

  // Auditoría
  createdBy String?
  updatedBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relaciones
  interactions Interaction[]
  activities   Activity[]    @relation("LeadActivities")
  LeadScore    LeadScore[]

  @@index([businessId])
  @@index([email])
  @@index([status])
  @@index([stage])
  @@index([createdAt])
  @@index([visitorId])
  @@index([sessionId])
  @@index([formId])
  @@index([score])
  @@index([isHot])
  @@index([campaignId])
  @@map("leads")
}

model Interaction {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  // Relaciones con entidades
  contact   Contact? @relation(fields: [contactId], references: [id])
  contactId String?  @db.Uuid
  lead      Lead?    @relation(fields: [leadId], references: [id])
  leadId    String?  @db.Uuid
  business  Business @relation(fields: [businessId], references: [id])
  businessId String  @db.Uuid

  // Detalles de interacción
  type        String
  title       String?
  description String?  @db.Text
  date        DateTime @default(now())
  duration    Int?

  // Estado y seguimiento
  status      String?
  priority    String?
  assignedTo  String?   @db.Uuid
  dueDate     DateTime?
  completedAt DateTime?

  // Tracking
  source   String?
  sourceId String?
  metadata Json?

  // Auditoría
  createdBy String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([businessId])
  @@index([contactId])
  @@index([leadId])
  @@index([type])
  @@index([date])
  @@index([status])
  @@index([assignedTo])
  @@map("interactions")
}

model Activity {
  id         String   @id @default(uuid()) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid

  // Tipo y categoría
  type         String // Corregido: activityType -> type
  category     String
  activityType String // Añadido para compatibilidad

  // Referencias a entidades
  entityType String
  entityId   String   @db.Uuid
  leadId     String?  @db.Uuid
  lead       Lead?    @relation("LeadActivities", fields: [leadId], references: [id])
  contactId  String?  @db.Uuid
  contact    Contact? @relation("ContactActivities", fields: [contactId], references: [id])
  userId     String?  @db.Uuid // Añadido

  // Datos de actividad
  title       String?
  description String?  @db.Text
  pageInfo    Json?
  metadata    Json?
  details     Json? // Añadido

  // Creador/origen
  createdBy String? @db.Uuid
  creator   User?   @relation("ActivityCreator", fields: [createdBy], references: [id])
  source    String?

  // Auditoría
  createdAt DateTime @default(now())

  @@index([businessId, type])
  @@index([entityType, entityId])
  @@index([createdAt])
  @@index([leadId])
  @@index([contactId])
  @@map("activities")
}

model ChannelStatus {
  id         String   @id @default(uuid()) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid

  // Referencias a entidades
  leadId    String?  @db.Uuid
  lead      Lead?    @relation(fields: [leadId], references: [id])
  contactId String?  @db.Uuid
  contact   Contact? @relation(fields: [contactId], references: [id])

  // Datos del canal
  channel      ChannelType
  status       String
  step         Int         @default(1)
  nextStepDate DateTime?

  // Métricas
  messagesSent     Int       @default(0)
  messagesReceived Int       @default(0)
  lastMessageDate  DateTime?
  lastResponseDate DateTime?

  // Metadata
  metadata Json?

  // Auditoría
  createdAt DateTime  @default(now())
  updatedAt DateTime?

  @@unique([leadId, channel])
  @@unique([contactId, channel])
  @@index([businessId, channel])
  @@index([nextStepDate])
  @@map("channel_statuses")
}

model CustomField {
  id         String   @id @default(uuid()) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid

  // Referencias polimórficas
  entityType String
  entityId   String @db.Uuid
  contactId  String? @db.Uuid
  contact    Contact? @relation("ContactCustomFields", fields: [contactId], references: [id])

  // Definición del campo
  key       String
  value     String @db.Text
  valueType String

  // Para formularios/campos personalizados
  label       String?
  description String?
  isPrivate   Boolean @default(false)

  // Auditoría
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([entityType, entityId, key])
  @@index([businessId, key])
  @@index([value])
  @@map("custom_fields")
}

model LeadScore {
  id         String   @id @default(uuid()) @db.Uuid
  business   Business @relation(fields: [businessId], references: [id])
  businessId String   @db.Uuid
  lead       Lead     @relation(fields: [leadId], references: [id])
  leadId     String   @db.Uuid

  // Detalles del scoring
  behavior  String
  points    Int
  metadata  Json?
  createdAt DateTime @default(now())

  @@index([leadId])
  @@index([behavior])
  @@map("lead_scores")
}
